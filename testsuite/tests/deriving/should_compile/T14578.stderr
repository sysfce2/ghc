
==================== Derived instances ====================
Derived class instances:
  instance (GHC.Base.Functor.Applicative f,
            GHC.Base.Functor.Applicative g, GHC.Base.Semigroup.Semigroup a) =>
           GHC.Base.Semigroup.Semigroup (T14578.Wat f g a) where
    (GHC.Base.Semigroup.<>) ::
      T14578.Wat f g a -> T14578.Wat f g a -> T14578.Wat f g a
    GHC.Base.Semigroup.sconcat ::
      GHC.Base.NonEmpty.NonEmpty (T14578.Wat f g a) -> T14578.Wat f g a
    GHC.Base.Semigroup.stimes ::
      forall (b :: *). GHC.Real.Integral b =>
                       b -> T14578.Wat f g a -> T14578.Wat f g a
    (GHC.Base.Semigroup.<>)
      = GHC.Prim.coerce
          @(T14578.App (Data.Functor.Compose.Compose f g) a
            -> T14578.App (Data.Functor.Compose.Compose f g) a
            -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(T14578.Wat f g a -> T14578.Wat f g a -> T14578.Wat f g a)
          ((GHC.Base.Semigroup.<>)
             @(T14578.App (Data.Functor.Compose.Compose f g) a))
    GHC.Base.Semigroup.sconcat
      = GHC.Prim.coerce
          @(GHC.Base.NonEmpty.NonEmpty
              (T14578.App (Data.Functor.Compose.Compose f g) a)
            -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(GHC.Base.NonEmpty.NonEmpty (T14578.Wat f g a)
            -> T14578.Wat f g a)
          (GHC.Base.Semigroup.sconcat
             @(T14578.App (Data.Functor.Compose.Compose f g) a))
    GHC.Base.Semigroup.stimes
      = GHC.Prim.coerce
          @(b
            -> T14578.App (Data.Functor.Compose.Compose f g) a
            -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(b -> T14578.Wat f g a -> T14578.Wat f g a)
          (GHC.Base.Semigroup.stimes
             @(T14578.App (Data.Functor.Compose.Compose f g) a))
  
  instance GHC.Base.Functor.Functor f =>
           GHC.Base.Functor.Functor (T14578.App f) where
    GHC.Base.Functor.fmap ::
      forall (a :: *) (b :: *). (a -> b)
                                -> T14578.App f a -> T14578.App f b
    (GHC.Base.Functor.<$) ::
      forall (a :: *) (b :: *). a -> T14578.App f b -> T14578.App f a
    GHC.Base.Functor.fmap
      = GHC.Prim.coerce
          @((a -> b) -> f a -> f b)
          @((a -> b) -> T14578.App f a -> T14578.App f b)
          (GHC.Base.Functor.fmap @f)
    (GHC.Base.Functor.<$)
      = GHC.Prim.coerce
          @(a -> f b -> f a) @(a -> T14578.App f b -> T14578.App f a)
          ((GHC.Base.Functor.<$) @f)
  
  instance GHC.Base.Functor.Applicative f =>
           GHC.Base.Functor.Applicative (T14578.App f) where
    GHC.Base.Functor.pure :: forall (a :: *). a -> T14578.App f a
    (GHC.Base.Functor.<*>) ::
      forall (a :: *) (b :: *). T14578.App f (a -> b)
                                -> T14578.App f a -> T14578.App f b
    GHC.Base.Functor.liftA2 ::
      forall (a :: *) (b :: *) (c :: *). (a -> b -> c)
                                         -> T14578.App f a -> T14578.App f b -> T14578.App f c
    (GHC.Base.Functor.*>) ::
      forall (a :: *) (b :: *). T14578.App f a
                                -> T14578.App f b -> T14578.App f b
    (GHC.Base.Functor.<*) ::
      forall (a :: *) (b :: *). T14578.App f a
                                -> T14578.App f b -> T14578.App f a
    GHC.Base.Functor.pure
      = GHC.Prim.coerce
          @(a -> f a) @(a -> T14578.App f a) (GHC.Base.Functor.pure @f)
    (GHC.Base.Functor.<*>)
      = GHC.Prim.coerce
          @(f (a -> b) -> f a -> f b)
          @(T14578.App f (a -> b) -> T14578.App f a -> T14578.App f b)
          ((GHC.Base.Functor.<*>) @f)
    GHC.Base.Functor.liftA2
      = GHC.Prim.coerce
          @((a -> b -> c) -> f a -> f b -> f c)
          @((a -> b -> c)
            -> T14578.App f a -> T14578.App f b -> T14578.App f c)
          (GHC.Base.Functor.liftA2 @f)
    (GHC.Base.Functor.*>)
      = GHC.Prim.coerce
          @(f a -> f b -> f b)
          @(T14578.App f a -> T14578.App f b -> T14578.App f b)
          ((GHC.Base.Functor.*>) @f)
    (GHC.Base.Functor.<*)
      = GHC.Prim.coerce
          @(f a -> f b -> f a)
          @(T14578.App f a -> T14578.App f b -> T14578.App f a)
          ((GHC.Base.Functor.<*) @f)
  

Derived type family instances:



==================== Filling in method body ====================
GHC.Base.Semigroup.Semigroup [T14578.App f a]
  GHC.Base.Semigroup.sconcat = GHC.Base.Semigroup.$dmsconcat
                                 @(T14578.App f a)



==================== Filling in method body ====================
GHC.Base.Semigroup.Semigroup [T14578.App f a]
  GHC.Base.Semigroup.stimes = GHC.Base.Semigroup.$dmstimes
                                @(T14578.App f a)


